

import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Image,
  FlatList,
  Dimensions,
  Animated,
  Linking, 
  WebView,
  ScrollView
} from 'react-native';

const window = Dimensions.get('window');

import Web from 'react-native-webview2';
import {Actions} from 'react-native-router-flux'
import NavBar, { NavButton, NavGroup, NavTitle } from 'react-native-nav';
import css from '../../Css'
import PostRelate from '../../components/posts/PostRelate';
import Loading from '../../components/Loading';

class PostDetail extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      scrollY: new Animated.Value(0),
      height: 20,
      relate: [
        {
          title: " 11 mẹo vặt hữu ích được 'học lỏm' từ các đầu bếp nhà hàng ",
          image_thumb: 'https://static.ipick.vn/images/posts/9a09ca4da679665a3fcd06e709b5b022/he-den-cho-con-lam-gi_LA0tXJ_1140x600.png',
          source: "Meo Vat"
        },
        {
          title: " Nghệ thuật bày biện món ăn của người Hàn",
          image_thumb: 'https://static.ipick.vn/images/posts/9a09ca4da679665a3fcd06e709b5b022/he-den-cho-con-lam-gi_LA0tXJ_1140x600.png',
          source: "Meo Vat"
        },
      ],
      data: {
        title: " 11 mẹo vặt hữu ích được 'học lỏm' từ các đầu bếp nhà hàng ",
        image_thumb: 'https://static.ipick.vn/images/posts/9a09ca4da679665a3fcd06e709b5b022/he-den-cho-con-lam-gi_LA0tXJ_1140x600.png',
        content: "Chuyện nấu ăn dường như là đối với rất nhiều người, và các tình trạng như nấu lúc sống lúc chín, thịt cháy, rau héo nát, đứt tay... hoàn toàn có thể xảy ra. Thế nhưng, bạn có từng nghĩ, nếu  được các mẹo vặt nấu ăn đơn giản từ chính các đầu bếp nhà hàng thì sẽ thế nào không?"
      },
    }
  }

  _onNavigationStateChange(webViewState){
    if(webViewState.url != ('https://mapi.ipick.vn/api/v1/webview?slug=chum-anh-cam-nang-du-lich-nhat-ban-duoi-tan-hoa-anh-dao-co-bao-nhieu-dieu-de-ke')) {
      this.refs.web.stopLoading();
      Linking.openURL(webViewState.url);
    }
  }
  
  renderLoading() {
    return (
      <Loading />
    )
  }

  render() {
    const navTranslate = Animated.diffClamp(this.state.scrollY, 0, 75).interpolate({
      inputRange: [0, 75],
      outputRange: [0, -75],
      extrapolate: 'clamp',
    });
    const navOpacity = Animated.diffClamp(this.state.scrollY, 0, 75).interpolate({
      inputRange: [0, 25],
      outputRange: [1, 0],
      extrapolate: 'clamp',
    });
    return (
      <View style={css.container}>
        <NavBar style={{navBar: css.navBar, statusBar: css.statusBar}} statusBar={{barStyle: 'light-content', backgroundColor: '#297FCA'}} >
          <NavButton/>
          {/* <NavTitle style={css.navTitle}>
            <Text style={css.txtTitle}>{this.props.title}</Text>
          </NavTitle> */}
          <NavButton/>
          <TouchableOpacity onPress={() => Actions.pop()} style={{position: 'absolute', left: 0, padding: 15}}>
            <Image source={require('../../images/icons/ic_back.png')} />
          </TouchableOpacity>
        </NavBar>

        

        <ScrollView style={{flex: 1}}>
          <View style={{flex: 1, paddingLeft: 15, paddingBottom: 30}}>
            <Text style={styles.txtTitle}>{this.state.data.title}</Text>
            <Image style={styles.img} source={{uri: this.state.data.image_thumb}} />
            <View style={{marginTop: 15, marginRight: 15,}}>
              <Web
                ref='web'
                source={{uri: 'https://mapi.ipick.vn/api/v1/webview?slug=chum-anh-cam-nang-du-lich-nhat-ban-duoi-tan-hoa-anh-dao-co-bao-nhieu-dieu-de-ke'}}
                scrollEnabled={false}
                javaScriptEnabled
                renderLoading={this.renderLoading}
                startInLoadingState
                onNavigationStateChange={this._onNavigationStateChange.bind(this)}
                // onLoadStart={this.onLoadStart.bind(this)}
                // onLoadEnd={this.onLoadEnd.bind(this)}
                evalReturn={((r) => {eval(r)}).bind(this)}
                automaticallyAdjustContentInsets={false}
                style={{width: window.width - 15, }}
                scalesPageToFit={true}
                dataDetectorTypes="none"
              />
            </View>

            <PostRelate
              title='Bài viết khác'
              data = {this.state.relate}
            />
          </View>
        </ScrollView>
     
      </View>
    )
  }
}

const styles = StyleSheet.create({
  img: {
    width: window.width - 15,
    height: 150,
    marginTop: 10
  },
  txtTitle: {
    color: '#c6247d',
    fontSize: 30,
    marginTop: 10,
  },
  navScroll: {
		position: 'absolute',
		top: 0,
		left: 0,
		right: 0,
  },
})

export default (PostDetail);