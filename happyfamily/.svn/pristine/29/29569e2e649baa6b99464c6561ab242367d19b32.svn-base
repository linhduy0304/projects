

import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  FlatList,
  TextInput,
  TouchableOpacity,
  Image,
  StatusBar,
  Platform,
  ImageBackground,
  Dimensions,
  Picker,
  ScrollView,
  ActivityIndicator
} from 'react-native';

const window = Dimensions.get('window');

import NavBar, { NavButton, NavGroup, NavTitle } from 'react-native-nav';
import css from '../../Css';
import Loading from '../../components/Loading';
import {Actions} from 'react-native-router-flux';
import {loadIndividual} from '../../actions/individual'
import { connect } from 'react-redux'
import ItemIndividual from '../../components/individual/ItemIndividual';

class Individual extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
          
        }
    }

    componentWillMount() {
      this.props.loadIndividual()
    }

    renderHeader() {
      return (
        this.props.individual.loading ?
          <Loading />
        : null
      )
    }

    render() {
        return (
          <View style={styles.container}>
            <View style={{height: Platform.OS === 'ios' ? 20 : 0, backgroundColor: '#C6247D'}}></View>
            <NavBar style={{navBar: css.navBar, statusBar: css.statusBar}} statusBar={{barStyle: 'light-content', backgroundColor: '#C6247D'}} >
              <NavButton/>
              <NavTitle style={css.navTitle}>
                  <Text style={css.txtTitle}>Danh sách thành viên</Text>
              </NavTitle>
              <NavButton/>
              <TouchableOpacity onPress={() => Actions.pop()} style={{position: 'absolute', left: 0, padding: 15}}>
                <Image source={require('../../images/icons/ic_back.png')} />
              </TouchableOpacity>
              <TouchableOpacity onPress={() => Actions.addIndividual()} style={{position: 'absolute', right: 0, padding: 15}}>
                <Image source={require('../../images/icons/ic_add_white.png')} />
              </TouchableOpacity>
            </NavBar>

              <FlatList 
                contentContainerStyle={{padding: 15,}}
                ListHeaderComponent={() => this.renderHeader()}
                data = {this.props.individual.individual}
                renderItem = {(data) => <ItemIndividual data ={data.item}/>}
                keyExtractor={(item, index) => index.toString()}
              />
              
          </View>
        )
    }
}

const styles = StyleSheet.create({
  
  container: {
    flex: 1,
    backgroundColor: 'rgb(237, 239, 241)'
  },
})

const mapStateToProps = (state) => {
  return {
    individual: state.individual,
  }
}

const mapDispatchToProps = (dispatch) => {
  return {
    loadIndividual: () => dispatch(loadIndividual()),
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(Individual);