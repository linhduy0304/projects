
'use strict'
import { Alert } from 'react-native';
import { Actions } from 'react-native-router-flux'
import SimpleToast from 'react-native-simple-toast';
const {
  INDIVIDUAL_REQUEST,
  INDIVIDUAL_SUCCESS,
  INDIVIDUAL_FAIL,
  ADD_INDIVIDUAL_REQUEST,
  ADD_INDIVIDUAL_SUCCESS,
  ADD_INDIVIDUAL_FAIL,
  RELATIONSHIP_REQUEST,
  RELATIONSHIP_SUCCESS,
  RELATIONSHIP_FAIL,
  EDIT_INDIVIDUAL_REQUEST,
  EDIT_INDIVIDUAL_SUCCESS,
  EDIT_INDIVIDUAL_FAIL,
  UPDATE_INDIVIDUAL_REQUEST,
  UPDATE_INDIVIDUAL_SUCCESS,
  UPDATE_INDIVIDUAL_FAIL,
  DELETE_INDIVIDUAL_REQUEST,
  DELETE_INDIVIDUAL_SUCCESS,
  DELETE_INDIVIDUAL_FAIL
} = require('../config/actionTypes');

const Individual = require('../services/Individual');

//load individual
export function individualRequest() {
  return {
    type: INDIVIDUAL_REQUEST,
  }
}

export function individualSuccess(data) {
  return {
    type: INDIVIDUAL_SUCCESS,
    data
  }
}

export function individualFail() {
  return {
    type: INDIVIDUAL_FAIL,
  }
}

export function loadIndividual() {
  return dispatch => {
    dispatch(individualRequest());
    return Individual.individual().then(res => {
      switch (res.status) {
        case 200:
          dispatch(individualSuccess(res.data));
          return;
        case 500:
          Alert.alert(
            'Thông báo!',
            'Đã có lỗi xảy ra! Vui lòng kiểm tra lại',
            [{ text: 'Ok', style: 'cancel' }],
          );
          dispatch(individualFail())
          return;
        default:
          dispatch(individualFail());
          return;
      }
    })
  }
}

export function addIndividualRequest() {
  return {
    type: ADD_INDIVIDUAL_REQUEST,
  }
}

export function addIndividualSuccess(data) {
  return {
    type: ADD_INDIVIDUAL_SUCCESS,
    data: data
  }
}

export function addIndividualFail() {
  return {
    type: ADD_INDIVIDUAL_FAIL,
  }
}

export function addIndividual(body) {
  return dispatch => {
    dispatch(addIndividualRequest());
    return Individual.addIndividual(body).then(res => {
      switch (res.status) {
        case 200:
          dispatch(addIndividualSuccess(res.data));
          Actions.individual();
          return;
        case 500:
          Alert.alert(
            'Thông báo!',
            'Đã có lỗi xảy ra! Vui lòng kiểm tra lại',
            [{ text: 'Ok', style: 'cancel' }],
          );
          dispatch(addIndividualFail())
          return;
        default:
          dispatch(addIndividualFail());
          return;
      }
    })
  }
}

export function relationshipRequest() {
  return {
    type: RELATIONSHIP_REQUEST,
  }
}

export function relationshipSuccess(data) {
  return {
    type: RELATIONSHIP_SUCCESS,
    data: data
  }
}

export function relationshipFail() {
  return {
    type: RELATIONSHIP_FAIL,
  }
}

export function relationships() {
  return dispatch => {
    dispatch(relationshipRequest());
    return Individual.relationships().then(res => {
      switch (res.status) {
        case 200:
          dispatch(relationshipSuccess(res.data))
          return;
        case 500:
          Alert.alert(
            'Thông báo!',
            'Đã có lỗi xảy ra! Vui lòng kiểm tra lại',
            [{ text: 'Ok', style: 'cancel' }],
          );
          dispatch(relationshipFail())
          return;
        default:
          dispatch(relationshipFail());
          return;
      }
    })
  }
}

export function editIndividual(id) {
  return dispatch => {
    dispatch(editIndividualRequest());
    return Individual.editIndividual(id).then(res => {
      switch (res.status) {
        case 200:
          dispatch(editIndividualSuccess(res.data));
          return;
        case 500:
          Alert.alert(
            'Thông báo!',
            'Đã có lỗi xảy ra! Vui lòng kiểm tra lại',
            [{ text: 'Ok', style: 'cancel' }],
          );
          dispatch(editIndividualFail())
          return;
        default:
          dispatch(editIndividualFail());
          return;
      }
    })
  }
}

export function editIndividualRequest() {
  return {
    type: EDIT_INDIVIDUAL_REQUEST,
  }
}

export function editIndividualSuccess(data) {
  return {
    type: EDIT_INDIVIDUAL_SUCCESS,
    data: data
  }
}

export function editIndividualFail() {
  return {
    type: EDIT_INDIVIDUAL_FAIL,
  }
}

export function updateIndividual(id, body) {
  return dispatch => {
    dispatch(updateIndividualRequest());
    return Individual.updateIndividual(id, body).then(res => {
      switch (res.status) {
        case 200:
          dispatch(updateIndividualSuccess(res.data));
          Actions.individual();
          return;
        case -1:
          dispatch(updateIndividualFail())
          SimpleToast.show(res.errors);
          return;
        case 500:
          Alert.alert(
            'Thông báo!',
            'Đã có lỗi xảy ra! Vui lòng kiểm tra lại',
            [{ text: 'Ok', style: 'cancel' }],
          );
          dispatch(updateIndividualFail())
          return;
        default:
          dispatch(updateIndividualFail());
          return;
      }
    })
  }
}

export function updateIndividualRequest() {
  return {
    type: UPDATE_INDIVIDUAL_REQUEST,
  }
}

export function updateIndividualSuccess(data) {
  return {
    type: UPDATE_INDIVIDUAL_SUCCESS,
    data: data
  }
}

export function updateIndividualFail() {
  return {
    type: UPDATE_INDIVIDUAL_FAIL,
  }
}

export function deleteIndividual(id) {
  return dispatch => {
    dispatch(deleteIndividualRequest());
    return Individual.deleteIndividual(id).then(res => {
      switch (res.status) {
        case 200:
          dispatch(deleteIndividualSuccess(id, res.data));
          Actions.individual();
          return;
        case -1:
          dispatch(deleteIndividualFail())
          SimpleToast.show(res.errors);
          return;
        case 500:
          Alert.alert(
            'Thông báo!',
            'Đã có lỗi xảy ra! Vui lòng kiểm tra lại',
            [{ text: 'Ok', style: 'cancel' }],
          );
          dispatch(deleteIndividualFail())
          return;
        default:
          dispatch(deleteIndividualFail());
          return;
      }
    })
  }
}

export function deleteIndividualRequest() {
  return {
    type: DELETE_INDIVIDUAL_REQUEST,
  }
}

export function deleteIndividualSuccess(id, data) {
  return {
    type: DELETE_INDIVIDUAL_SUCCESS,
    id: id,
    data: data
  }
}

export function deleteIndividualFail() {
  return {
    type: DELETE_INDIVIDUAL_FAIL,
  }
}