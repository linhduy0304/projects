import React, { Component } from 'react';
import {
    AppRegistry,
    StyleSheet,
    Text,
    View,
    ScrollView,
    Image,
    Dimensions,
    TouchableOpacity,
    TextInput,
    Platform,
    Keyboard,
    TouchableHighlight
} from 'react-native';
let deviceWidth = Dimensions.get('window').width;
import { Actions } from "react-native-router-flux";
import {validateEmail} from '../components/Functions';
import NavBar, { NavButton, NavButtonText, NavTitle } from 'react-native-nav';
import { TextField } from 'react-native-material-textfield';
import Spinner from "react-native-spinkit";

import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import {Map} from 'immutable';
import * as loginActions from '../actions/loginActions';

const actions = [
  loginActions
];
function mapStateToProps(state) {
  return {
  login: state.login
  };
}
function mapDispatchToProps(dispatch) {
  const creators = Map()
    .merge(...actions)
    .filter(value => typeof value === 'function')
    .toObject();
  return {
    actions: bindActionCreators(creators, dispatch),
    dispatch
  };
}
class ForgetPassword extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
          errorEmail: '',
          email: '',
          
        }
    }

    componentWillReceiveProps(nextProps) {
      if(nextProps.login != this.props.login) {
        this.setState({
          errorEmail: nextProps.login.error
        })
      }
    }

    btnFogotPassword() {
      this.setState({
        errorEmail: ''
      })
      Keyboard.dismiss();
      if(this.state.email == '') {
        this.setState({
          errorEmail: 'Email không được bỏ trống'
        })
        return;
      }
      if (!validateEmail(this.state.email)) {
        this.setState({
          errorEmail: 'Email không đúng định dạng'
        })
        return;
      }
      this.props.actions.submitForgotPassword(this.state.email);
    }
    

    render() {
        return (
            <View style={styles.content}>
              <View style={main.container}>
                <NavBar style={{navBar: main.navBarWhite, statusBar: main.statusBar}} statusBar={{barStyle: 'dark-content', backgroundColor: '#fff' }} >
                    <NavButton onPress={() => Actions.pop()} style={main.navBack}>
                      <Image style={{height: 10, width: 16}} source={require('../images/icons/ic_back_blue.png')}/>
                      <Text style={{fontSize: 14, color: '#446EB6', marginLeft: 5}}>Back</Text>
                    </NavButton>
                </NavBar>
                <NavBar style={{navBar: main.navBarExplore, statusBar: main.statusBar}} statusBar={{barStyle: 'dark-content', backgroundColor: '#fff' }} >
                  <NavTitle style={main.navExplore}>
                    Quên mật khẩu
                  </NavTitle>
                </NavBar>
                <ScrollView
                    style={styles.scrollView}
                    bounces={false}
                >
                    <View style={styles.boxIntro}>
                        <Text style={styles.txtIntro}>Nhập email bạn đã đăng ký với Happy Skin để được gửi đường dẫn khôi phục mật khẩu.</Text>
                    </View>
                    <TextField
                        label='Email'
                        autoCorrect={false}
                        onChangeText={(email) => this.setState({email: email})}
                        onSubmitEditing={() => this.btnFogotPassword()}
                        tintColor="#5A5E6F"
                        textColor="#0E0E11"
                        baseColor="#E9457A"
                        autoCapitalize="none"
                        autoCorrect={false}
                        value={this.state.email}
                    />
                      {
                        this.state.errorEmail ?
                        <Text style={styles.txtError}>{this.state.errorEmail}</Text>
                        : null
                      } 
                    <TouchableHighlight
                        onPress={() => this.btnFogotPassword()} style={styles.btnSumit} underlayColor='#d73554'>
                        <Text style={styles.colorButton}>Gửi cho tôi thông tin</Text>
                    </TouchableHighlight>
                    <View style={styles.hr}></View>
                    <View style={styles.boxSocial}>
                        <Text style={styles.txtSocial}>Hoặc bạn có thể</Text>
                        <TouchableOpacity
                            onPress={ null } style={[styles.btnSocial, {backgroundColor: '#2672CB'}]} underlayColor='#d73554'>
                            <Image style={styles.fbIcon} source={require('../images/icons/ic_fblogin.png')}/>
                            <Text style={[styles.colorButton, {marginLeft: 5}]}>Đăng nhập với Facebook</Text>
                        </TouchableOpacity>
                        <TouchableOpacity
                            onPress={ null } style={[styles.btnSocial, {backgroundColor: '#FF566B'}]} underlayColor='#d73554'>
                            <Image style={styles.ggIcon} source={require('../images/icons/ic_gglogin.png')}/>
                            <Text style={[styles.colorButton, {marginLeft: 5}]}>Đăng nhập với Google</Text>
                        </TouchableOpacity>
                    </View>
                </ScrollView>
              </View>
              {
              this.props.login.isFetching ? 
                <View style={main.mainSpin}>
                  <Spinner isFullScreen={true} isVisible={true} size={50} type={'Circle'} color={'#FFFFFF'}/>
                </View> : null
              }
            </View>
        );
    }
}

let main = require('../styles/Main');

const styles = StyleSheet.create({
  txtError: {
    color: 'rgb(255, 183, 101)',
    fontSize: 16
  },
  content: {
      flex: 1,
      backgroundColor: 'white'
  },
  container: {
      flex: 1
  },
  scrollView: {
      flex: 1,
      paddingLeft: 15,
      paddingRight: 15,
  },
  boxIntro: {
      paddingBottom: 15,
      paddingTop: 15,
  },
  txtIntro: {
      fontSize: 14,
      color: '#292A39'
  },
  btnSumit: {
      backgroundColor: 'rgb(215,53,84)',
      alignItems: 'center',
      justifyContent: 'center',
      height: 48,
      borderRadius: 4,
      marginTop: 25
  },
  colorButton: {
      color: '#FFFFFF',
      fontSize: 16,
  },
  hr: {
      height: 1,
      width: deviceWidth,
      backgroundColor: '#ECEEF0',
      marginTop: 20,
      marginBottom : 40
  },
  boxSocial: {
      paddingBottom: 20
  },
  txtSocial: {
      color: '#858E98',
      fontSize: 14,
  },
  btnSocial: {
      alignItems: 'center',
      flexDirection: 'row',
      height: 48,
      borderRadius: 4,
      marginTop: 15,
      justifyContent: 'center'
  },
  fbIcon: {
      width: 18,
      height: 18,
      marginRight: 5
  },
  ggIcon: {
      width: 17,
      height: 17,
      marginRight: 5
  },
  emailIcon: {
      width: 22,
      height: 22,
      marginRight: 5
  },
  colorEmail: {
      fontSize: 16,
      color: '#E30052'
  },
});
export default connect(mapStateToProps, mapDispatchToProps)(ForgetPassword);
